export const interviews = [
    {
        id: '1',
        role: 'Frontend Developer',
        description:
            'Craft responsive, dynamic, and intuitive user interfaces.',
        type: 'Technical',
        techstack: ['React', 'Tailwind'],
        createdAt: new Date(),
        questions: [
            'What is the virtual DOM and how does React use it?',
            'Explain the concept of component lifecycle in React.',
            'What are controlled vs uncontrolled components?',
            'Write a React component that fetches and displays user data.',
            'How does Tailwind CSS differ from Bootstrap?',
            'How would you optimize a large React application?',
            'What is the use of useMemo and useCallback hooks?',
            'How do you handle accessibility in your web applications?',
            'Write a function to debounce an input in React.',
            'Describe how you would design a responsive navigation bar using Tailwind.',
        ],
    },
    {
        id: '2',
        role: 'Backend Developer',
        description: 'Engineer scalable server-side logic and RESTful APIs.',
        type: 'Behavioral',
        techstack: ['Node.js', 'Express', 'MongoDB'],
        createdAt: new Date(),
        questions: [
            'Explain the event loop in Node.js.',
            'How do you structure an Express.js application?',
            'Write a simple REST API with GET and POST endpoints using Express.',
            'How would you implement JWT-based authentication?',
            'Describe the aggregation framework in MongoDB.',
            'How do you handle error logging in production?',
            'What is the difference between SQL and NoSQL databases?',
            'Write a MongoDB query to fetch all users aged between 20 and 30.',
            'How do you handle race conditions in asynchronous code?',
            'What are middleware functions in Express and how do they work?',
        ],
    },
    {
        id: '3',
        role: 'Full Stack Developer',
        description: 'Build seamless end-to-end web applications from scratch.',
        type: 'Technical',
        techstack: ['React', 'Node.js', 'MongoDB'],
        createdAt: new Date(),
        questions: [
            'How do you connect a React frontend with a Node.js backend?',
            'Build a full CRUD API using Node, Express, and MongoDB.',
            'How do you manage state globally in a React app?',
            'Write code to validate a form on both frontend and backend.',
            'Explain CORS and how to handle it in a full-stack app.',
            'How would you implement role-based access control?',
            'Describe how you deploy a MERN stack application.',
            'What is server-side rendering and when would you use it?',
            'How do you ensure security of user data in full-stack apps?',
            'Debug an error: your frontend can’t reach the backend hosted on a different port.',
        ],
    },
    {
        id: '4',
        role: 'Java Developer',
        description: 'Develop secure and high-performance Java applications.',
        type: 'Mixed',
        techstack: ['Java', 'Spring Boot', 'MySQL'],
        createdAt: new Date(),
        questions: [
            'What are the main features of OOP in Java?',
            'Write a Java class that implements a custom LinkedList.',
            'Explain dependency injection in Spring Boot.',
            'How do you configure a database connection in Spring Boot?',
            'Write a REST controller in Spring to handle user creation.',
            'How do you handle exceptions globally in Spring Boot?',
            'Describe the differences between HashMap and TreeMap.',
            'How would you optimize performance in a Java application?',
            'Explain the role of JPA in Spring applications.',
            'Write a query using Spring Data JPA to find users by email.',
        ],
    },
    {
        id: '5',
        role: 'Python Developer',
        description: 'Build elegant and efficient solutions using Python.',
        type: 'Behavioral',
        techstack: ['Python', 'Django', 'Jest'],
        createdAt: new Date(),
        questions: [
            'Explain the difference between a list and a tuple.',
            'Write a Python function to check if a string is a palindrome.',
            'What is a Django model and how is it used?',
            'How do you implement authentication in Django?',
            'Explain Django’s ORM and how it differs from raw SQL.',
            'How would you deploy a Django application?',
            'Write a unit test using Python’s unittest or pytest framework.',
            'What are Python decorators and how do you use them?',
            'How do you handle static and media files in Django?',
            'What is a Python generator? Write an example.',
        ],
    },
    {
        id: '6',
        role: 'UI/UX Developer',
        description: 'Design engaging and user-centric digital experiences.',
        type: 'Technical',
        techstack: ['Figma', 'Adobe XD', 'HTML/CSS'],
        createdAt: new Date(),
        questions: [
            'What’s your process for turning wireframes into responsive designs?',
            'How do you ensure accessibility in your designs?',
            'What are key principles of good UX?',
            'Explain the box model in CSS.',
            'Write HTML/CSS for a responsive grid layout.',
            'Describe the differences between Adobe XD and Figma.',
            'How do you handle browser compatibility issues?',
            'What are some common UI patterns you follow?',
            'Design a user onboarding flow for a new app.',
            'What tools do you use for user testing?',
        ],
    },
    {
        id: '7',
        role: 'MERN Developer',
        description:
            'Build applications using MongoDB, Express, React, and Node.js.',
        type: 'Technical',
        techstack: ['MongoDB', 'Express', 'React', 'Node.js'],
        createdAt: new Date(),
        questions: [
            'Build a MERN stack app that allows users to add and delete posts.',
            'Explain how state management works in a MERN stack.',
            'How do you protect sensitive routes in your MERN backend?',
            'Write an Express route that returns user data from MongoDB.',
            'How do you optimize React components for better performance?',
            'What is the role of Mongoose in a MERN app?',
            'Write a function in Node.js that connects to a MongoDB database.',
            'How do you handle form submission and validation in React?',
            'Explain the structure of a typical MERN project.',
            'Describe error handling across the stack in a MERN app.',
        ],
    },
    {
        id: '8',
        role: 'React Developer',
        description: 'Develop dynamic user interfaces using React.',
        type: 'Behavioral',
        techstack: ['React', 'Redux', 'TypeScript'],
        createdAt: new Date(),
        questions: [
            'What are the benefits of using TypeScript in React apps?',
            'How do you type props and state in TypeScript?',
            'Create a counter component in React using hooks and TypeScript.',
            'Explain the Redux flow: actions, reducers, store.',
            'How do you use Redux Toolkit?',
            'Write a useEffect hook that fetches API data on mount.',
            'How do you implement lazy loading in React?',
            'What are some common anti-patterns in React development?',
            'How do you handle global error messages in React?',
            'Explain how Context API differs from Redux.',
        ],
    },
];
